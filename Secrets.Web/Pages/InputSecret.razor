@page "/inputsecret"
@using Secrets.Web.Models
@inject HttpClient HttpClient

<PageTitle>Input a Secret</PageTitle>

<h2>Input a Secret</h2>
<form>
    <div class="form-group">
        <label for="secretInput">Secret</label>
        <input type="text" class="form-control" id="secretInput" aria-describedby="secretHelp" placeholder="I stole a chair from school" @bind="CurrentSecret" @oninput="e => CurrentSecret = (string) e.Value!">
        <small id="secretHelp" class="form-text text-muted">Enter your secret here (it's safe with us)</small>
    </div>
    <div class="form-group">
        <label class="form-label text-black">Enter some information as a backup in case you forget your passphrase:</label>
    </div> 
    <div class="form-group">
        <label for="dateInput">Birth Date</label>
        <input type="date" class="form-control" id="dateInput" aria-describedby="dateHelp" @oninput="e => BirthDate = e.Value!"/>
        <small id="dateHelp" class="form-text text-muted">Enter your birthdate, or any other date that you will remember</small>
    </div>
    <div class="form-group">
        <label for="letterInput">Favourite Letter</label>
        <input type="text" class="form-control" id="letterInput" aria-describedby="letterHelp" @bind="FavouriteLetter" @oninput="e => FavouriteLetter = (string) e.Value!"/>
        <small id="letterHelp" class="form-text text-muted">Enter your favourite letter, or any other symbol</small>
    </div>
    <div class="form-group">
        <label for="numberInput">Favourite Digit</label>
        <input type="number" step="1" min="0" max="9" class="form-control" id="numberInput" aria-describedby="numberHelp" @bind="FavouriteDigit" @oninput="e => { string? _temp = (string?) e.Value!; if (!string.IsNullOrEmpty(_temp)) { FavouriteDigit = short.Parse(_temp); }}">
        <small id="numberHelp" class="form-text text-muted">Enter your favourite digit</small>
    </div>
    <label class="form-label" hidden="@_hidePassPhrase">Your passphrase is: @Passphrase</label>
    <br>
    <button type="button" class="btn btn-primary mb-2" @onclick="InsertSecret">Input!</button>
</form>
@code {
    private string CurrentSecret { get; set; } = null!;
    private object BirthDate { get; set; } = null!;
    private string FavouriteLetter { get; set; } = null!;
    private short FavouriteDigit { get; set; }

    private bool _hidePassPhrase = true;
    private string Passphrase { get; set; } = null!;
    
    private readonly string[] _words = new string[3];
    private readonly Random _random = new Random();
    private English10K _english10K = null!;
    
    protected override async Task OnInitializedAsync()
    {
        _english10K = (await HttpClient.GetFromJsonAsync<English10K>("/english_10k.json"))!;
    }

    private void InsertSecret()
    {
        Passphrase = GeneratePassphrase();

        _hidePassPhrase = false;
        SecretRecord _record = new SecretRecord(Passphrase, CurrentSecret, DateTime.Parse((string) BirthDate), FavouriteLetter[0], FavouriteDigit);
        HttpClient.PostAsJsonAsync($"https://localhost:7151/secrets", _record);
    }

    private string GeneratePassphrase()
    {
        int _lenWords = _english10K.Words.Length;
        _words[0] = _english10K.Words[_random.Next(0, _lenWords)].ToLower();
        _words[1] = _english10K.Words[_random.Next(0, _lenWords)].ToLower();
        _words[2] = _english10K.Words[_random.Next(0, _lenWords)].ToLower();

        return string.Join('-', _words);
    }

}