@page "/InputSecret"
@using Secrets.Web.Models
@inject HttpClient HttpClient

<h3>InputSecret</h3>
<input type="text" @bind="CurrentSecret" @oninput="e => CurrentSecret = (string) e.Value!" placeholder="Enter your secret here:"/>
<br>
Enter some info you can use in case you forget your passphrase: <br>
Please enter your birthdate:
<input type="date" @oninput="e => BirthDate = e.Value!"/>
<br>
Please enter your favourite letter:
<input type="text" @bind="FavouriteLetter" @oninput="e => FavouriteLetter = (string) e.Value!"/>
<br>
Please enter your favourite digit:
<input type="number" step="1" min="0" max="9" @bind="FavouriteDigit" @oninput="e => { string? _temp = (string? ) e.Value!; if (!string.IsNullOrEmpty(_temp)) { FavouriteDigit = short.Parse(_temp);}}"/>
<br>
<p hidden="@HidePassPhrase">Your passphrase is: @Passphrase</p>
<button class="btn btn-primary" @onclick="InsertSecret"></button>
@code {
    private string CurrentSecret { get; set; } = null!;
    private object BirthDate { get; set; } = null!;
    private string FavouriteLetter { get; set; } = null!;
    private short FavouriteDigit { get; set; }

    private bool HidePassPhrase { get; set; } = true;
    private string Passphrase { get; set; } = null!;
    
    private readonly string[] _words = new string[3];
    private readonly Random _random = new Random();
    private English10K _english10K = null!;
    
    protected override async Task OnInitializedAsync()
    {
        _english10K = (await HttpClient.GetFromJsonAsync<English10K>("/english_10k.json"))!;
    }

    private void InsertSecret()
    {
        Passphrase = GeneratePassphrase();

        HidePassPhrase = false;
        SecretRecord _record = new SecretRecord(Passphrase, CurrentSecret, DateTime.Parse((string) BirthDate), FavouriteLetter[0], FavouriteDigit);
        HttpClient.PostAsJsonAsync($"https://localhost:7142/secrets", _record);
    }

    private string GeneratePassphrase()
    {
        int _lenWords = _english10K.Words.Length;
        _words[0] = _english10K.Words[_random.Next(0, _lenWords)].ToLower();
        _words[1] = _english10K.Words[_random.Next(0, _lenWords)].ToLower();
        _words[2] = _english10K.Words[_random.Next(0, _lenWords)].ToLower();

        return string.Join('-', _words);
    }

}